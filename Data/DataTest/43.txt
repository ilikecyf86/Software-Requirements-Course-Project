Terminal error on workspace creation
kind/question 
I am unable to figure out the parameter to change so that I can utilize the Terminal. I am attempting to connect to the server from my local laptop to the XenServer running the VM. Laptop: Macbook Pro Server Environment: Ubuntu 14.04 VM running on XenServer 7.0 Che version: 4.2.0 java: java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
 docker: Docker version 1.11.2, build b9f10c9 ifconfig: docker0   Link encap:Ethernet  HWaddr 02:42:6e:34:16:e4  
          inet addr:172.17.0.1  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:6eff:fe34:16e4/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:3617 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3735 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:428746 (428.7 KB)  TX bytes:547068 (547.0 KB)

eth0      Link encap:Ethernet  HWaddr 7e:1f:db:f6:c1:1b  
          inet addr:192.168.0.52  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::7c1f:dbff:fef6:c11b/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:501515 errors:0 dropped:0 overruns:0 frame:0
          TX packets:269480 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:480092691 (480.0 MB)  TX bytes:98747644 (98.7 MB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:6018 errors:0 dropped:0 overruns:0 frame:0
          TX packets:6018 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:6102401 (6.1 MB)  TX bytes:6102401 (6.1 MB)

veth7ef9b15 Link encap:Ethernet  HWaddr 96:a5:3e:7b:a6:f4  
          inet6 addr: fe80::94a5:3eff:fe7b:a6f4/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:150 errors:0 dropped:0 overruns:0 frame:0
          TX packets:157 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:20308 (20.3 KB)  TX bytes:19082 (19.0 KB)
 docker ps: CONTAINER ID        IMAGE                                                        COMMAND                  CREATED             STATUS              PORTS                                                                                                                       NAMES
e523fea0b597        eclipse-che/che_workspace860sq3d4afgkyw2d_ws-machine_7qxhr   "/home/user/entrypoin"   4 minutes ago       Up 4 minutes        0.0.0.0:32917->22/tcp, 0.0.0.0:32916->4401/tcp, 0.0.0.0:32915->4403/tcp, 0.0.0.0:32914->4411/tcp, 0.0.0.0:32913->8080/tcp   che_workspace860sq3d4afgkyw2d_ws-machine_7qxhr
 container /etc/hosts: 127.0.0.1   localhost
::1 localhost ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
172.17.0.1  che-host
172.17.0.2  e523fea0b597
 Launch command: bin/che.sh -r:192.168.0.52 run
 Server launch warning: [STDOUT] Listening for transport dt_socket at address: 4403
[STDOUT] 2016-06-06 21:16:44,117[main] [INFO] [o.a.c.s.VersionLoggerListener 89] - Server version: Apache Tomcat/8.0.32
[STDOUT] 2016-06-06 21:16:44,120[main] [INFO] [o.a.c.s.VersionLoggerListener 91] - Server built: Feb 2 2016 19:34:53 UTC
[STDOUT] 2016-06-06 21:16:44,120[main] [INFO] [o.a.c.s.VersionLoggerListener 93] - Server number: 8.0.32.0
[STDOUT] 2016-06-06 21:16:44,124[main] [INFO] [o.a.c.s.VersionLoggerListener 95] - OS Name: Linux
[STDOUT] 2016-06-06 21:16:44,125[main] [INFO] [o.a.c.s.VersionLoggerListener 97] - OS Version: 3.13.0-87-generic
[STDOUT] 2016-06-06 21:16:44,125[main] [INFO] [o.a.c.s.VersionLoggerListener 99] - Architecture: amd64
[STDOUT] 2016-06-06 21:16:44,126[main] [INFO] [o.a.c.s.VersionLoggerListener 101] - Java Home: /opt/jre1.8.0_65
[STDOUT] 2016-06-06 21:16:44,127[main] [INFO] [o.a.c.s.VersionLoggerListener 103] - JVM Version: 1.8.0_65-b17
[STDOUT] 2016-06-06 21:16:44,128[main] [INFO] [o.a.c.s.VersionLoggerListener 105] - JVM Vendor: Oracle Corporation
[STDOUT] 2016-06-06 21:16:44,129[main] [INFO] [o.a.c.s.VersionLoggerListener 107] - CATALINA_BASE: /home/user/che/ws-agent
[STDOUT] 2016-06-06 21:16:44,129[main] [INFO] [o.a.c.s.VersionLoggerListener 109] - CATALINA_HOME: /home/user/che/ws-agent
[STDOUT] 2016-06-06 21:16:44,131[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Djava.util.logging.config.file=/home/user/che/ws-agent/conf/logging.properties
[STDOUT] 2016-06-06 21:16:44,137[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
[STDOUT] 2016-06-06 21:16:44,139[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Xms256m
[STDOUT] 2016-06-06 21:16:44,140[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Xmx1024m
[STDOUT] 2016-06-06 21:16:44,141[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Djava.security.egd=file:/dev/./urandom
[STDOUT] 2016-06-06 21:16:44,142[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dche.logs.dir=/home/user/che/ws-agent/logs
[STDOUT] 2016-06-06 21:16:44,143[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -agentlib:jdwp=transport=dt_socket,address=4403,server=y,suspend=n
[STDOUT] 2016-06-06 21:16:44,144[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dcom.sun.management.jmxremote
[STDOUT] 2016-06-06 21:16:44,148[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dcom.sun.management.jmxremote.ssl=false
[STDOUT] 2016-06-06 21:16:44,149[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dcom.sun.management.jmxremote.authenticate=false
[STDOUT] 2016-06-06 21:16:44,150[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dche.local.conf.dir=/mnt/che/conf
[STDOUT] 2016-06-06 21:16:44,150[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Djava.endorsed.dirs=/home/user/che/ws-agent/endorsed
[STDOUT] 2016-06-06 21:16:44,151[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dcatalina.base=/home/user/che/ws-agent
[STDOUT] 2016-06-06 21:16:44,151[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Dcatalina.home=/home/user/che/ws-agent
[STDOUT] 2016-06-06 21:16:44,152[main] [INFO] [o.a.c.s.VersionLoggerListener 115] - Command line argument: -Djava.io.tmpdir=/home/user/che/ws-agent/temp
[STDOUT] 2016-06-06 21:16:44,407[main] [INFO] [o.a.c.http11.Http11NioProtocol 425] - Initializing ProtocolHandler ["http-nio-4401"]
[STDOUT] 2016-06-06 21:16:44,436[main] [INFO] [o.a.t.util.net.NioSelectorPool 72] - Using a shared selector for servlet write/read
[STDOUT] 2016-06-06 21:16:44,444[main] [INFO] [o.a.catalina.startup.Catalina 591] - Initialization processed in 906 ms
[STDOUT] 2016-06-06 21:16:44,481[main] [INFO] [c.m.JmxRemoteLifecycleListener 332] - The JMX Remote Listener has configured the registry on port 32002 and the server on port 32102 for the Platform server
[STDOUT] 2016-06-06 21:16:44,514[main] [INFO] [o.a.c.core.StandardService 435] - Starting service Catalina
[STDOUT] 2016-06-06 21:16:44,517[main] [INFO] [o.a.c.core.StandardEngine 259] - Starting Servlet Engine: Apache Tomcat/8.0.32
[STDOUT] 2016-06-06 21:16:44,628[ost-startStop-1] [INFO] [o.a.c.startup.HostConfig 910] - Deploying web application archive /home/user/che/ws-agent/webapps/ide.war
[STDOUT] Mon Jun 06 21:16:54 UTC 2016 - [localhost-startStop-1] Product-specified preferences called before plugin is started
[STDOUT] 2016-06-06 21:16:55,053[rrest.WSClient1] [INFO] [.c.a.c.n.WSocketEventBusClient 223] - Open connection to ws://che-host:8080/ide/api/eventbus/?token=dummy_token. 
[STDOUT] 2016-06-06 21:16:55,353[ost-startStop-1] [INFO] [o.a.c.startup.HostConfig 974] - Deployment of web application archive /home/user/che/ws-agent/webapps/ide.war has finished in 10,724 ms
[STDOUT] 2016-06-06 21:16:55,360[ost-startStop-1] [INFO] [o.a.c.startup.HostConfig 1030] - Deploying web application directory /home/user/che/ws-agent/webapps/ROOT
[STDOUT] 2016-06-06 21:16:55,485[ost-startStop-1] [INFO] [o.a.c.startup.HostConfig 1142] - Deployment of web application directory /home/user/che/ws-agent/webapps/ROOT has finished in 125 ms
[STDOUT] 2016-06-06 21:16:55,493[main] [INFO] [o.a.c.http11.Http11NioProtocol 470] - Starting ProtocolHandler ["http-nio-4401"]
[STDOUT] 2016-06-06 21:16:55,501[main] [INFO] [o.a.catalina.startup.Catalina 642] - Server startup in 11056 ms
[STDOUT] 2016-06-06 21:16:55,858[nio-4401-exec-1] [WARN ] [i.ContainerResponse$BodyWriter 90] - Client has aborted connection. Response writing omitted.
[STDOUT] 2016-06-06 21:16:55,860[nio-4401-exec-3] [WARN ] [i.ContainerResponse$BodyWriter 90] - Client has aborted connection. Response writing omitted.
[STDOUT] 2016-06-06 21:16:55,863[nio-4401-exec-2] [WARN ] [i.ContainerResponse$BodyWriter 90] - Client has aborted connection. Response writing omitted.
 Error message in Dashboard: che.properties: #
# Copyright (c) 2012-2016 Codenvy, S.A.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Codenvy, S.A. - initial API and implementation
#

# workspace proxy configuration
http.proxy=
https.proxy=

### Storage and user configuration
# The location where your workspaces (and their projects) are stored.
# This property is ignored on Windows due to limitations with VirtualBox
# On Windows, all workspaces stored in c:\%userprofile%\AppData\Local\Eclipse Che\
che.user.workspaces.storage=${che.home}/workspaces

# Your projects are synchronized from the Che server into the machine running each
# workspace. This is the directory in the machine where your projects are placed.
che.machine.projects.internal.storage=/projects

# Che stores various internal data objects as JSON on the file system.
che.conf.storage=${catalina.base}/temp/local-storage

# The dashboard uses this to manage direction of requests to the IDE
# Generally, do not modify.
che.ide.context=ide

### Configuration of embedded templates and samples
# Folder that contains JSON files with code templates and samples
project.template_description.location_dir=${che.home}/templates

### Configuration of embedded stacks
#Path to predefined stacks json
stack.predefined.list.json=${che.home}/stacks/predefined-stacks.json
#Path to folder with predefined stack icons
stack.predefined.icons.folder=${che.home}/stacks/stack_img

### oAuth configuration. You can setup GitHub oAuth to automate authentication to remote
### repositories. You need to first register this application with GitHub oAuth.
# GitHub application client ID
oauth.github.clientid=NULL
oauth.github.clientsecret=NULL
oauth.github.authuri= https://github.com/login/oauth/authorize
oauth.github.tokenuri= https://github.com/login/oauth/access_token
oauth.github.redirecturis= http://localhost:${SERVER_PORT}/ide/api/oauth/callback
auth.oauth.access_denied_error_page=/error-oauth

# Activates user self-service at the API level.
# Che has a single identity implementation, so this does not change the user experience.
# If true, enables user creation at API level
user.self.creation.allowed=false

# Remove locations where internal message bus events should be propagated to.
# For debugging - set to retrieve internal events from external clients.
notification.server.propagate_events=

# Che extensions can be scheduled executions on a time basis. 
# This configures the size of the thread pool allocated to extensions that are launched on
# a recurring schedule.
schedule.core_pool_size=10

### Docker is the default machine implementation within Che. Workspaces are powered by machines
### that are constructed when the workspace is started. The images used to generate containers
### for the machines can come from DockerHub or a private Docker registry.
machine.docker.registry=${CHE_REGISTRY_HOST}:5000
docker.registry.auth.url=http://${CHE_REGISTRY_HOST}:5000
docker.registry.auth.username=NULL
docker.registry.auth.password=NULL
docker.registry.auth.email=NULL
docker.connection.tcp.connection_timeout_ms=600000
docker.connection.tcp.read_timeout_ms=600000

### Machine configuration.  Machines power workspaces. This configures the Che behaviors that
### occur within the machine.

# This archive contains the server to run the workspace agent and any custom extensions.
# Che injects this archive into machines when they are booted or started.
machine.server.ext.archive=${che.home}/lib/ws-agent.zip

# The machine's log files are stored here
machine.logs.location=${che.logs.dir}/machine/logs

# Size of the machine by default.  What is used if RAM parameter not provided by user or API.
machine.default_mem_size_mb=1024

# When the workspace master launches a new workspace, Che performs checks of the internal Web 
# services. When Che gets a valid response, we know that the workspace agent is ready for use.
machine.ws_agent.max_start_time_ms=60000
machine.ws_agent.ping_delay_ms=2000
machine.ws_agent.ping_conn_timeout_ms=2000
machine.ws_agent.ping_timed_out_error_msg=Timeout reached. The Che server has been unable to verify that your workspace's agent has successfully booted. Either the workspace is unreachable, the agent had an error during startup, or your workspace is starting slowly. You can configure machine.ws_agent.max_start_time_ms in Che properties to increase the timeout.
machine.ws_agent.agent_api.path=/ide/ext/

# Hosts listed here will be added to /etc/hosts of each workspace machine.
# Add an entry here if you write a ws-agent extension that needs to communicate outside the machine
machine.docker.machine_extra_hosts=NULL

# This is the API endpoint of the workspace master running within the core Che server.
# This tells the workspace agent how to connect back to the Che server.
# che-host is a fake DNS hostname that Che creates for itself.
machine.docker.che_api.endpoint=http://che-host:${SERVER_PORT}/ide/api
#machine.docker.che_api.endpoint=http://172.17.0.1:8080/ide/api
#machine.docker.che_api.endpoint=http://192.168.0.52:8080/ide/api

# If this is true, then we always pull an image from a registry even if we have an image cached
# locally. If false, Docker only pulls image if it does not exist locally.
machine.docker.pull_image=true

# If true, then all docker machines will start in privilege mode.
machine.docker.privilege_mode=false

# If the browser clients that are accessing Che are remote AND the configuration of Docker is an
# internal IP address or using Unix sockets, then remote browser clients will not be able to connect
# to the workspace. Set the Docker configuration so that Docker containers have an external IP 
# address and provide this host or IP address here.
#machine.docker.local_node_host=NULL
machine.docker.local_node_host=192.168.0.52

# URL path to api service.  
# Browser clients use this to initiate REST communications with workspace master
api.endpoint=http://localhost:${SERVER_PORT}/ide/api
#api.endpoint=http://192.168.0.52:${SERVER_PORT}/ide/api

#### Everrest is a Java Web Services toolkit that manages JAX-RS & web socket communications
#### Users should rarely need to configure this.
# Disable asynchronous mechanism that is embedded in everrest.
org.everrest.asynchronous=false
# Quantity of asynchronous requests which may be processed at the same time
org.everrest.asynchronous.pool.size=20
# Size of queue. If asynchronous request can't be processed after consuming it will be added in queue.
org.everrest.asynchronous.queue.size=500
# Timeout in minutes for request. If after timeout request is not done or client did not come yet to get result of request it may be discarded.
org.everrest.asynchronous.job.timeout=10
# Size of cache for waiting, running and ended request.
org.everrest.asynchronous.cache.size=1024
# Path to asynchronous service
org.everrest.asynchronous.service.path=/async/

#machine.ssh.connection_timeout_ms=3000
machine.ssh.connection_timeout_ms=5000
# The location of the Web Socket terminal used within the browser.
# This is copied into the machine and run from within it.
# Suffix helps differentiate archive for different architectures/OSes
machine.server.terminal.path_to_archive.linux_amd64=${che.home}/lib/linux_amd64/terminal
machine.server.terminal.path_to_archive.linux_arm7=${che.home}/lib/linux_arm7/terminal
 As you can see, I have tried a few different combinations in the properties file to resolve this. Any help is much appreciated. Thanks.