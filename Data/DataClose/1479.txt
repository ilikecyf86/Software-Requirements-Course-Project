Debugger doesn't activate breakpoints in inner classes
kind/bug team/enterprise severity/P1 team/production team/enterprise team/production status/blocked team/enterprise status/open-for-dev status/blocked selenium/failure 
Java console project can be found here. There are varouse type of inner classes with methods where breakpoints aren't activated in runtime after start of debug session. Reproduction Steps: Open workspace and import test project https://github.com/dmytro-ndp/java-inner as maven project. Add maven command "build-and-debug": clean install && java -jar -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y ${current.project.path}/target/*.jar Open "src/main/java/test/App.java" file inside editor and set next breakpoints: - anonymous class: at line 26 in the method getAnonymValue() - method local inner class: at line 42 in the method App.getAppValue().MethodLocalInner.getValue(); - inner class: at line 53 in the method App.Inner.getInnerValue(); - static inner class: at line 61 in the method App.StaticInner.getStaticInnerValue(). Call top menu command "Run > Edit Debug Configurations..." and create Java Remote configuration with port=8000. Invoke "build-and-debug" command and wait until there is "Listening for transport dt_socket at address: 8000" message in console. Call top menu command "Run > Debug > Remote java" Expected behavior: All breakpoints become an active, and Che is break executing of application at the next line one-by-one: 26, 42, 53, 61 Actual wrong behaviour: Breakpoints didn't become an active, and Che executed an application without stops. Screencast: Selenium tests: There is couple selenium tests which should be enabled after this bug is fixed: InnerClassAndLambdaDebuggingTest.shouldDebugMethodLocalInnerClass() InnerClassAndLambdaDebuggingTest.shouldDebugInnerClass() InnerClassAndLambdaDebuggingTest.shouldDebugStaticInnerClass() OS and version: Ubuntu 14.04 LTS Browser: Chrome Version 55.0.2883.87 (64-bit) Che version: 5.3.1 How to fix: Analyse parents of iMember che/plugins/plugin-java-debugger/che-plugin-java-debugger-server/src/main/java/org/eclipse/che/plugin/jdb/server/utils/JavaDebuggerUtils.java Line 224 in 0e4ffb7 return iMember.getDeclaringType().getFullyQualifiedName(); If any parent is instance of SourceMethod it means we have deal with local inner class and have to take it in into account by altering fully qualified name from classA$classB to classA$1classB Fix java debugger server side