Che-gwt-maven-plugin
kind/task sprint/next-sprint status/open-for-dev team/platform sprint/next-sprint 
Setup of GWT compilation is quite long. che/assembly/assembly-ide-war/pom.xml Lines 345 to 417 in 871ef34 <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> <executions> <execution> <id>gwt-xml</id> <phase>generate-sources</phase> <goals> <goal>java</goal> </goals> <configuration> <mainClass>org.eclipse.che.util.GwtXmlGenerator</mainClass> <arguments> <argument>--rootDir=${generated.sources.directory}</argument> <argument>--loggingEnabled=${gwt.log.enable}</argument> </arguments> </configuration> </execution> <execution> <id>extManager-client</id> <phase>generate-sources</phase> <goals> <goal>java</goal> </goals> <configuration> <mainClass>org.eclipse.che.util.ExtensionManagerGenerator</mainClass> <arguments> <argument>--rootDir=${generated.sources.directory}</argument> </arguments> </configuration> </execution> <execution> <id>IDEInjector-client</id> <phase>generate-sources</phase> <goals> <goal>java</goal> </goals> <configuration> <mainClass>org.eclipse.che.util.IDEInjectorGenerator</mainClass> <arguments> <argument>--rootDir=${generated.sources.directory}</argument> </arguments> </configuration> </execution> <execution> <id>DtoRegistry-client</id> <phase>generate-sources</phase> <goals> <goal>java</goal> </goals> <configuration> <mainClass>org.eclipse.che.util.DtoFactoryVisitorRegistryGenerator</mainClass> <arguments> <argument>--rootDir=${generated.sources.directory}</argument> </arguments> </configuration> </execution> </executions> </plugin> <plugin> <groupId>org.eclipse.che.core</groupId> <artifactId>che-core-dyna-provider-generator-maven-plugin</artifactId> <version>${project.version}</version> <executions> <execution> <phase>generate-sources</phase> <goals> <goal>generate</goal> </goals> </execution> </executions> <configuration> <outputDirectory>${generated.sources.directory}</outputDirectory> </configuration> we would like to combine all step that have to be done during gwt compilation into single maven plugin. Parts Generate single gwt.xml Generates {ExtensionManager} class source looks for all the Gin Modules annotated with ExtensionGinModule annotation and generat single IDEInjector class Generates DtoFactoryVisitorRegistry class source. Generate implementation for DynaProvider. Generate BuildInfo.properties with revision, buildTime and version ??? classes artifact for provided dependencies. ??? classes artifact for compile dependencies. In parallel it would be good to implement all source code generation with String templates.