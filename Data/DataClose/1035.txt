Documentation for running generated archtypes is not correct (for Windows compile)
kind/question 
I think the documentation in https://eclipse.org/che/docs/assemblies/assembly-lifecycle/index.html is not correct if you are building your archetypes on windows. It provides this as an example how to start the archetype: docker run -it --rm --name run-che -v /var/run/docker.sock:/var/run/docker.sock -v /c/tmp:/data -v /c/archetype/assembly/assembly-main/target/eclipse-che-5.4.0/eclipse-che-5.4.0:/assembly eclipse/che:5.4.0 start --skip:nightly" But actually this will not work if the archetype was built on windows. It should be docker run -it --rm --name run-che -v /var/run/docker.sock:/var/run/docker.sock -v /c/tmp:/data -v /c/archetype/assembly/assembly-main/target:/assembly eclipse/che:5.4.0 start --skip:nightly" This was my scenario: Under Win7 I created an archetype like that: mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate -DarchetypeRepository=http://maven.codenvycorp.com/content/groups/public/ -DarchetypeGroupId=org.eclipse.che.archetype -DarchetypeArtifactId=plugin-wizard-archetype -DarchetypeVersion=5.9.0 -DgroupId=com.test.components -DartifactId=test -Dversion=6.0.0 -DskipITs -DinteractiveMode=false and compiled it on the same machine: cd test mvn clean install Now I tried to start the assembly (on a virtualbox in which I mounted /media/ws which contains the archetype folder test): docker run -it --rm --name bosch_che -v /var/run/docker.sock:/var/run/docker.sock -v /media/ws/test/assembly-che/assembly-main/target/eclipse-che-5.9.0/eclipse-che-5.9.0:/assembly -v /media/ws/chedata:/data eclipse/che-cli:5.9.0 start I try to create a workspace using the C++ stack. However starting the workspace agent failed with: [STDERR] /bin/sh: 270: /home/user/che/ws-agent/bin/catalina.sh: Permission denied I don't get this error if I compile on Ubuntu. I don't get the error if I use target instead of target/eclipse-che-5-9-0/eclipse-che-5-9-0 (compiled on windows or ubuntu) The reason seems to be that the subfolders contain the already expanded version of the assembly, but since this is windows in my case, the scripts are not executable due to wrong attributes.