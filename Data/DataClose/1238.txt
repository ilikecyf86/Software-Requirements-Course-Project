Variable values can't be reviewed when IDE steps into JRE class for debug
kind/bug team/enterprise severity/P1 severity/P2 severity/P1 selenium/failure team/production team/enterprise team/production team/enterprise status/blocked sprint/current-sprint sprint/current-sprint status/blocked 
Reproduction Steps: Create and open workspace from java stack. Import project https://github.com/dmytro-ndp/java-with-external-libs.git and configure it as maven project. Add command "build and debug" to the IDE: mvn -f ${current.project.path} clean install && java -jar -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 ${current.project.path}/target/java-with-external-libs-1.0-SNAPSHOT-jar-with-dependencies.jar Open SimpleLogger.java file in editor. Set debug breakpoint to the line 13 with command javaLogger.log(Level.INFO, "Info from java logger");. Execute command "build and debug". Call top-menu command "Run > Debug > Remote Java". Wait until execution is stopped at the breakpoint. Go to Debug Panel and call "Step Into" command. Expected behavior IDE opens class Logger and there are values of variables "msg" and "level" in Variables Panel list. Evaluate Expression popup displays values of "msg" and "level" variables. Actual wrong behavior There were no values of variables "msg" and "level" in Variables Panel list. Evaluate Expression popup displays next error message when requested values of "msg" and "level" variables: Error: Failed to evaluate an expression. Reason: {} Server returns 500 Internal Server Error on address http://172.19.20.32:33739/api/debugger/6/evaluation?expression=msg Screencast Error reason There was org.eclipse.che.plugin.jdb.server.expression.ExpressionException at the server caused by com.sun.jdi.AbsentInformationException. Stack trace from this line: [org.eclipse.che.plugin.jdb.server.expression.Evaluator.getLocalVariable(Evaluator.java:264),
 org.eclipse.che.plugin.jdb.server.expression.JavaTreeParser.primaryExpression(JavaTreeParser.java:8197),
 org.eclipse.che.plugin.jdb.server.expression.JavaTreeParser.expr(JavaTreeParser.java:7821),
 org.eclipse.che.plugin.jdb.server.expression.JavaTreeParser.expression(JavaTreeParser.java:6317),
 org.eclipse.che.plugin.jdb.server.expression.JavaTreeParser.evaluate(JavaTreeParser.java:6220),
 org.eclipse.che.plugin.jdb.server.expression.ANTLRExpressionParser.evaluate(ANTLRExpressionParser.java:41),
 org.eclipse.che.plugin.jdb.server.JavaDebugger.evaluate(JavaDebugger.java:681),
 org.eclipse.che.plugin.jdb.server.JavaDebugger.evaluate(JavaDebugger.java:674),
 org.eclipse.che.api.debugger.server.DebuggerService.expression(DebuggerService.java:199),
...
]
 Root problem There were no visible variables at all in debug thread when executing method org.eclipse.che.plugin.jdb.server.expression.Evaluator#getLocalVariable Selenium tests Test com.codenvy.ide.debugger.DebugExternalClassTest#shouldDebugJreClass should be enabled after the successful fix of this bug.