Passing CHE_PORT env var to docker "che start" results in unreachable server
kind/question kind/bug severity/blocker status/pending-merge team/pm kind/question 
When starting v5.0.1 with CHE_PORT defined on the command line (-e CHE_PORT=8088) the CLI starts OK, creates proper docker-compose files via puppet with "-p 8088:8080" to redirect the external port. But then the CHE_PORT env var is passed on to the server which will now run on that port instead of its default. So the result is that the container is started with "-p 8088:8080" and then the server inside the container runs on port 8088, which is now unreachable. Using docker exec to enter the server container, I can see that the server is indeed running on port 8088 instead of its default of 8080. Reproduction Steps: docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock \
        -v /home/me/che-data:/data \
        -e CHE_PORT=8088 \
        eclipse/che start
# ...The resulting logfile clearly states that it cannot reach the server.
 Che version: 5.0.1 OS and version: Ubuntu 16.04.1 Docker version: 1.12.1 / 1.12.1 Che cli.log output: Fri Jan 13 16:13:23 UTC 2017
INFO: (che cli): Checking network... (hint: '--fast' skips version, network, and nightly checks)
/usr/bin/curl  "-I -k dockerhub.com -s -o /dev/null --write-out %{http_code}"
INFO: (che cli): Loading cli...
DEBUG: docker_run
DEBUG: is_boot2docker
DEBUG: is_initialized
DEBUG: cli_parse
DEBUG: cmd_start
DEBUG: is_docker_for_mac
DEBUG: is_initialized
DEBUG: is_initialized
INFO: (che cli): Checking registry for version '5.0.1' images
eval IMAGE_PUPPET=puppet/puppet-agent-alpine:4.6.2
eval IMAGE_REGISTRY=registry:2.5.0
eval IMAGE_INIT=eclipse/che-init:5.0.1
eval IMAGE_CHE=eclipse/che-server:5.0.1
DEBUG: update_image_if_not_found
�[0;32mINFO:�[0m (che download): Checking for image 'puppet/puppet-agent-alpine:4.6.2'...
found
DEBUG: update_image_if_not_found
�[0;32mINFO:�[0m (che download): Checking for image 'registry:2.5.0'...
found
DEBUG: update_image_if_not_found
�[0;32mINFO:�[0m (che download): Checking for image 'eclipse/che-init:5.0.1'...
found
DEBUG: update_image_if_not_found
�[0;32mINFO:�[0m (che download): Checking for image 'eclipse/che-server:5.0.1'...
found
INFO: (che init):  Installing configuration and bootstrap variables:
mkdir -p "/data"
mkdir -p "/data/instance"
DEBUG: docker_run
INFO: (che init):    CHE_HOST=192.168.1.150
INFO: (che init):    CHE_VERSION=5.0.1
INFO: (che init):    CHE_CONFIG=/home/me/che-data
INFO: (che init):    CHE_INSTANCE=/home/me/che-data/instance
INFO: (che config):  Generating che configuration...
DEBUG: generate_configuration_with_puppet
DEBUG: is_docker_for_windows
docker_run                  --env-file="/data/che.env"                   --env-file=/version/5.0.1/images                   -v "/home/me/che-data/instance":/opt/che:rw                                      -e "CHE_ENV_FILE=/home/me/che-data/instance/config/che.env"                   -e "CHE_CONTAINER_ROOT=/data"                   -e "CHE_ENVIRONMENT=production"                   -e "CHE_CONFIG=/home/me/che-data/instance"                   -e "CHE_INSTANCE=/home/me/che-data/instance"                   -e "CHE_REPO=off"                   --entrypoint=/usr/bin/puppet                       eclipse/che-init:5.0.1                           apply --modulepath                                 /etc/puppet/modules/                                 /etc/puppet/manifests/che.pp --show_diff >> "/data/cli.log"
DEBUG: docker_run
�[mNotice: Compiled catalog for fbece46793cb in environment production in 0.20 seconds�[0m
�[mNotice: /Stage[main]/Base/File[/opt/che/data]/ensure: created�[0m
�[mNotice: /Stage[main]/Base/File[/opt/che/config]/ensure: created�[0m
�[mNotice: /Stage[main]/Base/File[/opt/che/logs]/ensure: created�[0m
�[mNotice: /Stage[main]/Base/File[/opt/che/templates]/ensure: created�[0m
�[mNotice: /Stage[main]/Base/File[/opt/che/stacks]/ensure: created�[0m
�[mNotice: /Stage[main]/Che/File[/opt/che/config/che.env]/ensure: defined content as '{md5}91455b9c8ec5e37a6470be0c1503b0fd'�[0m
�[mNotice: /Stage[main]/Compose/Compose::Generate_compose_file[docker-compose-container.yml]/File[/opt/che/docker-compose-container.yml]/ensure: defined content as '{md5}85b31a2dc77695b2829d3e9092a9c65f'�[0m
�[mNotice: /Stage[main]/Compose/Compose::Generate_compose_file[docker-compose.yml]/File[/opt/che/docker-compose.yml]/ensure: defined content as '{md5}046f55304c3bdea84b6741a567fa4a1d'�[0m
�[mNotice: Applied catalog in 0.06 seconds�[0m
INFO: (che config):  Customizing docker-compose for running in a container
INFO: (che start):  Preflight checks
DEBUG: port_open
         port 8088 (http):       �[0;32m[AVAILABLE]�[0m 
DEBUG: port_open

INFO: (che start):  Starting containers...
docker_compose --file="/data/instance/docker-compose-container.yml" -p="che" up -d >> "/data/cli.log" 2>&1
DEBUG: docker_compose
DEBUG: docker_run
Creating che
docker inspect -f '{{.Id}}' che
INFO: (che start):  Services booting...
INFO: (che start):  Server logs at "docker logs -f che"
/usr/bin/curl  "-I -k 192.168.1.150:8088/api/ -s -o /dev/null --write-out %{http_code}"
000
sleep 2
/usr/bin/curl  "-I -k 192.168.1.150:8088/api/ -s -o /dev/null --write-out %{http_code}"
000
sleep 2
/usr/bin/curl  "-I -k 192.168.1.150:8088/api/ -s -o /dev/null --write-out %{http_code}"
000
sleep 2
/usr/bin/curl  "-I -k 192.168.1.150:8088/api/ -s -o /dev/null --write-out %{http_code}"
000
sleep 2
/usr/bin/curl  "-I -k 192.168.1.150:8088/api/ -s -o /dev/null --write-out %{http_code}"
000
(... truncated ...)
ERROR: (che start): Timeout waiting for server. Run "docker logs che" to inspect the issue.