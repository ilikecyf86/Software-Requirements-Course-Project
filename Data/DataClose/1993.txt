Desktop Installations of Che & Assemblies
kind/epic 
We will package up the Che client and associated dependencies as an Electron application suitable for offline installation on Windows, Mac, and Linux. The general idea is that we can create native installers for different operating systems that include an Electron client, an optional installation for Docker Engine, and other dependencies that would be required to install and run Che in an offline mode, not connected to the Internet. The electron client will run locally on the desktop and it's lifecycle will be dictated by the user double clicking the core icon, or closing the client window. These actions will drive events to the local Che. It will also be possible with various onboarding workflows to use the electron client with remote Che instances, such as Codenvy.io or Artik.io. Create electron client packaging for Windows (exe), Mac (dmg), and Linux (zip / tgz). The electron packagaing should have a nice icon for the product that it represents, provide minimize / maximize, and also have an icon that appears in the system tray when minified. #3308 Design and implement a new onboarding workflow when a user opens the electron client. The onboarding workflow can be configured differently for different Che assemblies. For ARTIK, the onboarding should assume that a user can either run ARTIK IDE locally, or they can connect to a remote ARTIK IDE server. If connecting to a remote server, the URL + PORT would be needed, but no user name or password. For Che + Codenvy, this should be a common onboarding flow, and there would be a sequence for connecting locally, to a remote che (no user / pass), or to a remote codenvy (requires user / pass). In the Codenvy scenario, if a user wants to connect their electron client to codenvy.io or another codenvy system AND they do not have an account, we should provide a link in the electron client that the user can select to take them to an iframe where they can create an account on that Codenvy system. If the electron client is connecting to a local Che, then the electron client should have some basic configuration saved within it for the CHE_HOST and the CHE_PORT. It will first test to see if a Che server is running on that host + port. If there is one running, then connect to it. If there is not one running, then it should use the Che docker CLI to start a new one, and then connect to it. We will need PM to design intelligent loaders to let the user know that the Che server is starting in the background, and if it fails, we should let them see the logs of the failure. When closing the Electron client, we should have two modes, saved in the electron configuration locally. If using a local Che server, when closing the client, we should stop the local Che server. We can provide a configuration property of the electron client that determines if the Che server should be stopped or not overriding default behavior. If the electron client is connected to a remote workspace, we should automatically stop all of the workspaces that we are connected to. We can provide a configuration property of the electron client that determines if the workspaces should be automtaically stopped or not when the electron client is closed. As part of the .exe, .dmg wizard installers, we should include Docker for Windows and Docker for Mac. When doing an installation of the electron packaging on the system, we should test to see if Docker 1.11 is already present. If it is not, and you are on a valid system where we can install Docker for Windows or Mac, we should offer to instlal it and launch the installers. If not, then we should give users a link to the web site where they can install Docker Toolbox or the right configuration. https://github.com/codenvy/artik-ide/issues/237 https://github.com/codenvy/artik-ide/issues/138 #3386 The installation should include TAR files for all of the images necessary to run Che for that particular version and the Che / Codenvy CLI. These would be the same images that are generated according to the docs today when we do 'cli offline'. We will also include at least one stack image as part of this. If it is ARTIK, we would include the ARTIK SDK stack image. If a user runs Che and it is not connected to the internet, it should try and use the locally saved images that were provided in the installation. https://github.com/codenvy/artik-ide/issues/264 #3391 We should modify the user dashboard to be smarter about offline mode. If the system is not connected to the internet (or explicitly started in offline mode), we should gray out stacks that are not available in local TAR files. This would require us to add meta data to each of the stack's to indicate the list of docker images that are needed to run that stack, and then we could parse that list to detect if those images are available locally or not. We need to gracefully help users configure the electron client and how it interacts with the outside world. The items of configuration that a user may need to configure could be done in a local configuration file, or perhaps as part of the onboarding GUI in a preferences window. The configuration items include: CHE_HOST / ARTIK_HOST / CODENVY_HOST Local Only: CHE_PORT / ARTIK_PORT Proxy Config: ALL_PROXY, HTTP_PROXY, HTTPS_PROXY, NO_PROXY (test conn to dockerhub) Config property for stopping client: stop all remote workspaces? yes / no Config property for stopping client: stop local che server? yes / no Default onboarding flow (local, remote)? --- skips onboarding screens #3390 The installation should support uninstallation, which would delete the Electron client, any locally running Che servers, but leave the Che workspace data behind. We would not uninstall Docker. #3387 We would need a way to support upgrades. If a user gets a new version of the .exe installation and already has an electron client installed, how would the upgrade process work? We should also verify that electron clients can be installed and run in Windows folders with spaces in the names. We should also test this on Windows 7. #3388 Update CI systems to generate specialized packages for Che, Artik, and Codenvy. These packages should be generated on each tagged release and made avaialble for download. If Che, then the download should also e posted on the Eclipse download servers. #3389 https://github.com/codenvy/artik-ide/issues/263 For docs and the eclipse.org/che web site, we will modify all of our getting started workflows for people who are running Che locally. We will need them to first start by installing the electron client, and then optionally they can install the docker version separately.