Workspace Infrastructure SPI for v6
kind/epic 
Current SPI which provides machines instances is outdated. Originally it was reworked from v3 implementation where we used it for shared builder/runner. Then we were oriented to one machine (mostly Docker container) workspace. As a result it is not good adopted (too stricted) to new requirements such as multi-machine (Compose described) or other nature of infrastructure (such as Kubernetes/OpenShift) and we have to spend a lot of effort for workarounds trying to adopt it. Base idea of new SPI is that interfaces to implement should be really light, contract not that stricted and as a result the main functional loading is put to concrete Infrastructure implementation. Pilot implementation of this concept is placed in the "spi" branch. https://github.com/eclipse/che/tree/spi First draft of SPI specification #5035 Implement snapshotting concept in Docker SPI implementation #5101 Rework SPI components to allow clients to get current state of Runtime while it is still starting #5092 Create POC of Codenvy implementation of SPI #5100 Rework Agent installation #3971 Rework server pinging to make it more interactive and fast #5420 Specify IDE Application state phases and make it more clear #4900 Provide all endpoints of an server as separate servers in Runtime #5609 Termination of workspace infrastructure #5570 Implement mechanism for providing unique ids for json rpc clients #5439 (Dmitrii) Investigate how to run IDE tooling in separate containers #5623 Che master doesn't restart properly in SPI branch #5610 Provide links of the workspace to the client #5581 Add server health concept into infrastructure workflow. #5093 Run QA in SPI branch and figure out what should be done to adapt QA to SPI In progress TODO Related epics & issues: Adapt che dashboard in the spi branch #5887 SPI 6 Docker implementation #5639 OpenShift infrastructure implementation of SPI #5098