"group id ... is too big" on exec-agent module on Mac
kind/question kind/enhancement kind/bug kind/question 
This is very similar to #680 except it has surfaced in the exec-agent module which uses the iterator-maven-plugin. The root cause is that on IT-provisioned Macs in some companies, your user id and group id are very high (> 2097151 ) and you have no way to change it. On my own personal Mac this issue doesn't surface and I guess that is why you don't see this when you compile on your Codenvy/Che Mac CIs. As #680 shows you need to tell the maven assembly plug-in to set <tarLongFileMode>posix</tarLongFileMode>. However, there is a bug in iterator-maven-plugin where setting it to <tarLongFileMode>posix</tarLongFileMode> at https://github.com/eclipse/che/blob/master/exec-agent/pom.xml#L168 does nothing. I have filed the bug and fix at khmarbaise/iterator-maven-plugin#39 but it's not clear when it will be merged in and a new version published. Reproduction Steps: You are on a Mac and if you do id on the terminal you see that your uid and/or guid are > 2097151. Check out a recent version of Che that has exec-agent mvn clean install -Pfast Expected behavior: You should be able to compile successfully. Observed behavior: Caused by: org.apache.maven.plugin.PluginExecutionException: Execution null of goal org.apache.maven.plugins:maven-assembly-plugin:2.6:single failed: group id '<your gid value>' is too big ( > 2097151 ). Use STAR or POSIX extensions to overcome this limit
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:145)
        at com.soebes.maven.plugins.iterator.IteratorMojo.executeMojo(IteratorMojo.java:406)
        at com.soebes.maven.plugins.iterator.IteratorMojo.handlePluginExecution(IteratorMojo.java:305)
        ... 23 more
Caused by: java.lang.RuntimeException: group id '<your gid value>' is too big ( > 2097151 ). Use STAR or POSIX extensions to overcome this limit
        at org.codehaus.plexus.archiver.commonscompress.archivers.tar.TarArchiveOutputStream.failForBigNumber(TarArchiveOutputStream.java:635)
        at org.codehaus.plexus.archiver.commonscompress.archivers.tar.TarArchiveOutputStream.failForBigNumberWithPosixMessage(TarArchiveOutputStream.java:630)
        at org.codehaus.plexus.archiver.commonscompress.archivers.tar.TarArchiveOutputStream.failForBigNumbers(TarArchiveOutputStream.java:613)
        at org.codehaus.plexus.archiver.commonscompress.archivers.tar.TarArchiveOutputStream.putArchiveEntry(TarArchiveOutputStream.java:290)
        at org.codehaus.plexus.archiver.tar.TarArchiver.tarFile(TarArchiver.java:312)
        at org.codehaus.plexus.archiver.tar.TarArchiver.execute(TarArchiver.java:171)
        at org.codehaus.plexus.archiver.AbstractArchiver.createArchive(AbstractArchiver.java:916)
        at org.apache.maven.plugin.assembly.archive.archiver.AssemblyProxyArchiver.createArchive(AssemblyProxyArchiver.java:445)
        at org.apache.maven.plugin.assembly.archive.DefaultAssemblyArchiver.createArchive(DefaultAssemblyArchiver.java:181)
        at org.apache.maven.plugin.assembly.mojos.AbstractAssemblyMojo.execute(AbstractAssemblyMojo.java:484)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
        ... 25 more Temporary workaround Clone a local version of maven-iterator-plugin Apply the changes from my PR at khmarbaise/iterator-maven-plugin#39 mvn clean install Update https://github.com/eclipse/che/blob/master/exec-agent/pom.xml to do two things: use the local version of maven-iterator-plugin with changes add posix Recommendation: When @khmarbaise releases a new version of maven-iterator-plugin, Che should probably update its pom.xml for exec-agent and use that new version. All usages of the maven-assembly-plugin should also have <tarLongFileMode>posix</tarLongFileMode> set to avoid such issues in the future for Mac users on IT-provisioned machines. Che version: master (M9 tag when this was reported) OS and version: OS X 10.11.6 (observed on 10.10.5 as well) Additional information: Problem started happening recently, didn't happen in an older version of Che: Yes - with the exec-agent module Problem can be reliably reproduced, doesn't happen randomly: Yes