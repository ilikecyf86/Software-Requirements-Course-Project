Migrate to the new generation gwt-maven-plugin
kind/enhancement target/branch team/ide status/in-progress sprint/next-sprint sprint/current-sprint sprint/next-sprint status/in-progress 
CQ: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=14390 Related to Che 6 branch only. Should also fix #2595 The goal of this task is migrate from the legacy org.codehaus.mojo:gwt-maven-plugin (aka Mojo's) to the new one - net.ltgt.gwt.maven:gwt-maven-plugin. Cons of the legacy plugin: since 7 Apr 2017 Mojo's maven plugin has been considered as a legacy; designed a long time ago when most of the GWT projects contained client, server and shared code within the same maven module. So the old plugin promotes hacking to make it work. E.g. it's really hard to configure launching Super DevMode from the command line regardless of the used IDE; Mojo's plugin is tightly linked to a specific version of GWT. Some of the advantages of the new plugin: the new plugin is considered as the new generation GWT maven plugin and it's strongly encouraged to use it instead of the legacy one; designed from the beginning with multi-module projects in mind and follows best practices; independent of the GWT version (should work with GWT version provided by the gwt-dev dependency). Opportunities Che will get with the new plugin: better UX for plugins' developers: flexible options for generating GWT-module descriptors (.gwt.xml): it may be generated automatically if you follow the provided layout it may be generated from a template <inherits> may be generated from the project's dependencies proceeding from the previous points we don't need to use our GwtXmlGenerator with exec-maven-plugin execution; correct work with multi-module projects, e.g., Super DevMode. To migrate to the new plugin we need: use gwt-lib lifecycle/packaging for all artifacts with client code; use gwt-app lifecycle/packaging for assembly-ide-war; slightly adapt projects structure according to the layout provided by the new gwt-maven-plugin; avoid using GwtXmlGenerator; get rid of Mojo's gwt-maven-plugin.