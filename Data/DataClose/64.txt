Add an ability to make Servers of LSs non-accessible for non-authenticated access from external network
kind/task target/che6 team/platform sprint/current-sprint status/in-progress 
Description While we want to provide an ability to run language server as a separate container and identify them as servers in workspace runtime via attributes, we need to have an ability to limit access to the LS. Without that LS that listens TCP socket would allow non-authenticated access to files that are accessible from the LS's container. Because of that, we want to add a concept of internal server. This server should be treated by workspace infrastructure in a different way than the regular server. URL of such a servers must be non-accessible outside of workspace's containers. Since these servers are useless for UD, IDE clients we can hide them from workspace runtime returned by Workspace API by default. To get runtime with internal servers client should add some query parameter, e.g. ?internal=true (feel free to provide your suggestions). Tasks: Create an attribute that identifies a server as internal. Make workspace infras use URLs that are accessible from workspace only for servers identified as internal. Show internal servers in the runtime of a workspace only when a special query parameter is provided by a client. Reproduction Steps OS and version: Diagnostics: