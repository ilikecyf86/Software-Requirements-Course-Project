please help with installation process
kind/question 
Reproduction Steps: WARN: Bound 'eclipse/che' to 'eclipse/che:5.9.1' INFO: Proxy: HTTP_PROXY=, HTTPS_PROXY=, NO_PROXY=*.local, 169.254/16 INFO: (che cli): 5.9.1 - using docker 17.03.1-ce / docker4mac INFO: (che config): Generating che configuration... INFO: (che config): Customizing docker-compose for running in a container INFO: (che start): Preflight checks mem (1.5 GiB): [OK] disk (100 MB): [OK] port 8080 (http): [ALREADY IN USE] ERROR: Ports required to run che are used by another program. OS and version: MacOS sierra 10.12.4 Diagnostics: INFO: Welcome to Eclipse Che! INFO: INFO: You are missing a mandatory parameter: INFO: 1. Mount 'docker.sock' for accessing Docker with unix sockets. INFO: 2. Or, set DOCKER_HOST to Docker's location (unix or tcp). INFO: INFO: Mount Syntax: INFO: Start with 'docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock' ... INFO: INFO: DOCKER_HOST Syntax: INFO: Start with 'docker run -it --rm -e DOCKER_HOST= ...' INFO: INFO: Possible root causes: INFO: 1. Your admin has not granted permissions to /var/run/docker.sock. INFO: 2. You passed '--user uid:gid' with bad values. INFO: 3. Your firewall is blocking TCP ports for accessing Docker daemon. INFO: Welcome to Eclipse Che! INFO: INFO: You are missing a mandatory parameter: INFO: 1. Mount 'docker.sock' for accessing Docker with unix sockets. INFO: 2. Or, set DOCKER_HOST to Docker's location (unix or tcp). INFO: INFO: Mount Syntax: INFO: Start with 'docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock' ... INFO: INFO: DOCKER_HOST Syntax: INFO: Start with 'docker run -it --rm -e DOCKER_HOST= ...' INFO: INFO: Possible root causes: INFO: 1. Your admin has not granted permissions to /var/run/docker.sock. INFO: 2. You passed '--user uid:gid' with bad values. INFO: 3. Your firewall is blocking TCP ports for accessing Docker daemon. [[ info –bundle --trace == --\s\k\i\p:\n\i\g\h\t\l\y ]] [[ info –bundle --trace == --\s\k\i\p:\n\e\t\w\o\r\k ]] [[ info –bundle --trace == --\s\k\i\p:\p\u\l\l ]] [[ info –bundle --trace == --\h\e\l\p ]] [[ info –bundle --trace == --\s\k\i\p:\s\c\r\i\p\t\s ]] ORIGINAL_PARAMETERS='info –bundle --trace' set -- info –bundle --trace set -- info –bundle --trace set -- info –bundle --trace set -- info –bundle '' set -- info –bundle '' set -- info –bundle '' set -- info –bundle '' set -- info –bundle '' set -- info –bundle '' source /scripts/base/startup_02_pre_docker.sh init_check_docker info –bundle '' has_docker hash docker return 0 ++ docker ps ++ true CHECK_VERSION='Cannot connect to the Docker daemon. Is the docker daemon running on this host?' [[ Cannot connect to the Docker daemon. Is the docker daemon running on this host? = \E\r\r\o\r\ \r\e\s\p\o\n\s\e\ \f\r\o\m\ \d\a\e\m\o\n:\ \c\l\i\e\n\t\ \i\s\ \n\e\w\e\r ]] '[' -z '' ']' docker ps info 'Welcome to Eclipse Che!' '[' -z ']' INFO: Welcome to Eclipse Che! local PRINT_COMMAND= local 'PRINT_STATEMENT=Welcome to Eclipse Che!' is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' 'Welcome to Eclipse Che!' ++ printf 'INFO: %b %b\n' '' 'Welcome to Eclipse Che!' log INFO: Welcome to Eclipse 'Che!' [[ false = \t\r\u\e ]] info '' '[' -z ']' local PRINT_COMMAND= local PRINT_STATEMENT= is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' '' INFO: ++ printf 'INFO: %b %b\n' '' '' log INFO: [[ false = \t\r\u\e ]] info 'You are missing a mandatory parameter:' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT=You are missing a mandatory parameter:' is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' 'You are missing a mandatory parameter:' INFO: You are missing a mandatory parameter: ++ printf 'INFO: %b %b\n' '' 'You are missing a mandatory parameter:' log INFO: You are missing a mandatory parameter: [[ false = \t\r\u\e ]] info ' 1. Mount '''docker.sock''' for accessing Docker with unix sockets.' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= 1. Mount '''docker.sock''' for accessing Docker with unix sockets.' is_info '[' true = true ']' return 0 INFO: 1. Mount 'docker.sock' for accessing Docker with unix sockets. printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' 1. Mount '''docker.sock''' for accessing Docker with unix sockets.' ++ printf 'INFO: %b %b\n' '' ' 1. Mount '''docker.sock''' for accessing Docker with unix sockets.' log INFO: 1. Mount ''''docker.sock'''' for accessing Docker with unix sockets. [[ false = \t\r\u\e ]] info ' 2. Or, set DOCKER_HOST to Docker'''s location (unix or tcp).' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= 2. Or, set DOCKER_HOST to Docker'''s location (unix or tcp).' is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' 2. Or, set DOCKER_HOST to Docker'''s location (unix or tcp).' INFO: 2. Or, set DOCKER_HOST to Docker's location (unix or tcp). ++ printf 'INFO: %b %b\n' '' ' 2. Or, set DOCKER_HOST to Docker'''s location (unix or tcp).' log INFO: 2. Or, set DOCKER_HOST to 'Docker'''s' location '(unix' or 'tcp).' [[ false = \t\r\u\e ]] info '' '[' -z ']' local PRINT_COMMAND= local PRINT_STATEMENT= is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' '' INFO: ++ printf 'INFO: %b %b\n' '' '' log INFO: [[ false = \t\r\u\e ]] info 'Mount Syntax:' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT=Mount Syntax:' is_info '[' true = true ']' return 0 INFO: Mount Syntax: printf '\033[0;32mINFO:\033[0m %b%b\n' '' 'Mount Syntax:' ++ printf 'INFO: %b %b\n' '' 'Mount Syntax:' log INFO: Mount Syntax: [[ false = \t\r\u\e ]] info ' Start with '''docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock''' ...' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= Start with '''docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock''' ...' is_info INFO: Start with 'docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock' ... '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' Start with '''docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock''' ...' ++ printf 'INFO: %b %b\n' '' ' Start with '''docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock''' ...' log INFO: Start with ''''docker' run -it --rm -v '/var/run/docker.sock:/var/run/docker.sock'''' ... [[ false = \t\r\u\e ]] info '' '[' -z ']' INFO: local PRINT_COMMAND= local PRINT_STATEMENT= is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' '' ++ printf 'INFO: %b %b\n' '' '' log INFO: [[ false = \t\r\u\e ]] info 'DOCKER_HOST Syntax:' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT=DOCKER_HOST Syntax:' is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' 'DOCKER_HOST Syntax:' INFO: DOCKER_HOST Syntax: ++ printf 'INFO: %b %b\n' '' 'DOCKER_HOST Syntax:' log INFO: DOCKER_HOST Syntax: [[ false = \t\r\u\e ]] info ' Start with '''docker run -it --rm -e DOCKER_HOST= ...'''' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= Start with '''docker run -it --rm -e DOCKER_HOST= ...'''' is_info '[' true = true ']' return 0 INFO: Start with 'docker run -it --rm -e DOCKER_HOST= ...' printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' Start with '''docker run -it --rm -e DOCKER_HOST= ...'''' ++ printf 'INFO: %b %b\n' '' ' Start with '''docker run -it --rm -e DOCKER_HOST= ...'''' log INFO: Start with ''''docker' run -it --rm -e 'DOCKER_HOST=' '...'''' [[ false = \t\r\u\e ]] info '' '[' -z ']' local PRINT_COMMAND= local PRINT_STATEMENT= is_info '[' true = true ']' return 0 INFO: printf '\033[0;32mINFO:\033[0m %b%b\n' '' '' ++ printf 'INFO: %b %b\n' '' '' log INFO: [[ false = \t\r\u\e ]] info 'Possible root causes:' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT=Possible root causes:' is_info '[' true = true ']' return 0 INFO: Possible root causes: printf '\033[0;32mINFO:\033[0m %b%b\n' '' 'Possible root causes:' ++ printf 'INFO: %b %b\n' '' 'Possible root causes:' log INFO: Possible root causes: [[ false = \t\r\u\e ]] info ' 1. Your admin has not granted permissions to /var/run/docker.sock.' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= 1. Your admin has not granted permissions to /var/run/docker.sock.' is_info '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' 1. Your admin has not granted permissions to /var/run/docker.sock.' INFO: 1. Your admin has not granted permissions to /var/run/docker.sock. ++ printf 'INFO: %b %b\n' '' ' 1. Your admin has not granted permissions to /var/run/docker.sock.' log INFO: 1. Your admin has not granted permissions to /var/run/docker.sock. [[ false = \t\r\u\e ]] info ' 2. You passed '''--user uid:gid''' with bad values.' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= 2. You passed '''--user uid:gid''' with bad values.' is_info INFO: 2. You passed '--user uid:gid' with bad values. '[' true = true ']' return 0 printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' 2. You passed '''--user uid:gid''' with bad values.' ++ printf 'INFO: %b %b\n' '' ' 2. You passed '''--user uid:gid''' with bad values.' log INFO: 2. You passed ''''--user' 'uid:gid'''' with bad values. [[ false = \t\r\u\e ]] info ' 3. Your firewall is blocking TCP ports for accessing Docker daemon.' '[' -z ']' local PRINT_COMMAND= local 'PRINT_STATEMENT= 3. Your firewall is blocking TCP ports for accessing Docker daemon.' is_info '[' true = true ']' return 0 INFO: 3. Your firewall is blocking TCP ports for accessing Docker daemon. printf '\033[0;32mINFO:\033[0m %b%b\n' '' ' 3. Your firewall is blocking TCP ports for accessing Docker daemon.' ++ printf 'INFO: %b %b\n' '' ' 3. Your firewall is blocking TCP ports for accessing Docker daemon.' log INFO: 3. Your firewall is blocking TCP ports for accessing Docker daemon. [[ false = \t\r\u\e ]] return 2 cleanup RETURN_CODE=2 '[' 2 -eq 3 ']'