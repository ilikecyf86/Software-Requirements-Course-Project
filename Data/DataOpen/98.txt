Alternative implementation of abnormal machine stop and container events propagation
kind/task team/platform target/che6 
Description Since we have changed the usage of OpenShiftClient from one instance per action to one instance per Che server in the scope of PR, we have one connection pool which has limits for a number of idled connections (it equals to 5 connections by default but it can be overridden). Based on this we have no way to watch pod actions and container events for each workspace with using 2 separate WebSocket connections because at some point we overload the connection pool. It is possible to use one websocket connection and listen to events of all workspaces if the Che server is configured in the following ways: If Che server is configured to use system admin credentials (username/password or token); If Che server is configured to use a service account. But there is no clear way how to implement this when Che server uses users' token (like OSIO scenario) or credentials of a user which doesn't have system admin rights. So it is needed to investigate possible ways how to listen to OpenShift events which will work for all configuration combinations.