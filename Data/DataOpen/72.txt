Implement new Java debugger evaluator based on new NTLR 4 parser
kind/enhancement kind/task team/enterprise 
Current java debugger evaluator uses NTLR 3 parser based on Java 5 grammar. Need to implement evaluator based on Listener class generated by NTLR 4. While parsing expression NTLR calls methods on Listener on each logical step. The main idea is to have a value storage that will be updated on listener. The result object has to be updated according to logical steps called in the listener using the value storage. Listener initialization: CharStream stream = CharStreams.fromString("i + getsmth()");

Java8Lexer lexer = new Java8Lexer(stream);
CommonTokenStream tokenStream = new CommonTokenStream(lexer);
Java8Parser parser = new Java8Parser(tokenStream);
ParseTreeWalker walker = new ParseTreeWalker();

walker.walk(new Java8BaseListener(), parser.expression());
 When listener invokes new variable initialization need to initialize it in the virtual machine: ClassType ct = (ClassType) vm.classesByName("java.lang.String").get(0);
Method m = ct.concreteMethodByName("<init>", "()V");
ThreadReference t = vm.allThreads().get(3);

ObjectReference ob = ct.newInstance(t, m, Collections.emptyList(), 0);
 Current parser location: https://github.com/eclipse/che-lib/tree/master/antlr-java5-grammar