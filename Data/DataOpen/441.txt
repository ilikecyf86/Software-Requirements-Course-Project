Git dedicated panel and integration
kind/epic team/enterprise 
Goal The current Eclipse Che version is providing a Git plugin with many of features but the overall experience is tedious for users. Simple actions are needing a lot of interactions and the user flow have been made complex. The current git integration is also lacking of feedbacks to show to the user the changes that have been made. The goal of this epic is to rethink the Git experience in order to improve the developer efficiency and provide integrated features (in the editor and in the explorer). We'll provide a new Git panel, which will be displayed in the left area. This panel will allow the user to do the most common Git actions more easily and will progressively replace certain of the features currently implemented in the git plugin. Linked issues and discussions #1605 #3614 #4969 #3415 #3416 #5335 #5339 #5340 Subtasks Add git panel to display local changes #6361 Synchronize list of repositories and the list of local changes #6608 Apply new styles to the widget displaying local changes #6645 Port git dedicated panel to che6 #7022 Git commit window tree files view selection model confused #6255 Ability to commit files in git dedicated panel #7085 Hide panel if there is no git projects Details Git Panel: We'll introduce a new git panel which is composed of 3 main areas: Repositories: to select the project to interact with History: to select local/remote branches, browse previous changes and interact with the remote repo to fetch, pull or push Local: to see the changes and execute a commit. Commented: Commit Options: When doing a commit, we'll provide certain options to the user so that it will be easier to configure the commit parameters. We'll provide: Ability to amend the latest commit Sign off the commit (taken from git preferences defined in the workspace) Automatically push the changes to the remote repo The git commit options will be valid only to the commit currently in progress. List of changes: The list of changes will provide two view options: flat list or tree view. The list of changes can also be sorted by different options. The list of changes will use icons to show the different type of changes, those icons are getting a color which will be used in the project explorer and in the editor consistently. Flat list: Tree view: List display options: It will also be possible to do a right click on the files in the list of changes to remove a file, add to gitignore or reset to an certain version. Diff view: We'll display in the editor area the side to side view to compare the changes. TBD: Later we will add ability to stage the changes, discard the changes from this view too. Pull view: Clicking on Pull or Push will open dedicate popups. The pull view is going to show more options and allow to rebase instead of merging. (Note: design on popups is not final and might change before final version.) Editor and Explorer Integration: We will also integrate Git inside of the basic elements of the IDE, such as the project explorer and the editor. The goal is to show to the user on which branch he is currently working on and also the various changes he has in progress. The colors used, will be consistent with the Git Panel.